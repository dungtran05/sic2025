<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chụp Ảnh & Gửi API</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background-color: #f0f2f5;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }
        h1 {
            color: #333;
            margin-bottom: 30px;
        }
        #video-container {
            position: relative;
            width: 640px; /* Tùy chỉnh kích thước */
            max-width: 90%;
            height: 480px; /* Tùy chỉnh kích thước */
            max-height: 70vh;
            background-color: #000;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            margin-bottom: 20px;
        }
        video {
            width: 100%;
            height: 100%;
            object-fit: cover; /* Đảm bảo video lấp đầy khung */
            transform: scaleX(-1); /* Lật ngang video để giống gương */
        }
        canvas {
            display: none; /* Ẩn canvas, chỉ dùng để xử lý ảnh */
        }
        .controls {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }
        button {
            padding: 12px 25px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            color: white;
            font-weight: bold;
        }
        button#start-camera {
            background-color: #28a745;
        }
        button#start-camera:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }
        button#capture-photo {
            background-color: #007bff;
        }
        button#capture-photo:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }
        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
        #result-container {
            background-color: #ffffff;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 640px;
            max-width: 90%;
            min-height: 100px;
            text-align: left;
            overflow-y: auto;
            max-height: 300px;
            word-break: break-word; /* Ngắt chữ dài */
        }
        #result-container h3 {
            margin-top: 0;
            color: #333;
        }
        #result-data {
            font-family: 'Courier New', Courier, monospace;
            white-space: pre-wrap; /* Giữ nguyên định dạng */
            color: #000;
        }
        .error-message {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Chụp Ảnh Với Webcam & Gửi API YOLO</h1>

    <div id="video-container">
        <video id="webcam-feed" autoplay playsinline></video>
        <canvas id="photo-canvas"></canvas>
    </div>

    <div class="controls">
        <button id="start-camera">Bật Camera</button>
        <button id="capture-photo" disabled>Chụp Ảnh</button>
    </div>

    <div id="result-container">
        <h3>Kết Quả Dự Đoán:</h3>
        <pre id="result-data">Chưa có dữ liệu nào.</pre>
        <div id="error-display" class="error-message"></div>
    </div>

    <script>
        const video = document.getElementById('webcam-feed');
        const canvas = document.getElementById('photo-canvas');
        const context = canvas.getContext('2d');
        const startCameraButton = document.getElementById('start-camera');
        const capturePhotoButton = document.getElementById('capture-photo');
        const resultData = document.getElementById('result-data');
        const errorDisplay = document.getElementById('error-display');

        let mediaStream = null;
        const API_URL = 'http://localhost:5000/predict'; // Đảm bảo URL này khớp với API của bạn!
        //Hàm chuyển chuỗi
        // --- Hàm Bật Camera ---
        startCameraButton.addEventListener('click', async () => {
            errorDisplay.textContent = ''; // Xóa thông báo lỗi cũ
            resultData.textContent = 'Chưa có dữ liệu nào.'; // Xóa kết quả cũ
            try {
                // Yêu cầu quyền truy cập camera
                mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });
                video.srcObject = mediaStream;
                video.onloadedmetadata = () => {
                    video.play();
                    // Đảm bảo nút chụp ảnh được bật sau khi camera sẵn sàng
                    capturePhotoButton.disabled = false;
                    startCameraButton.disabled = true; // Tắt nút bật camera
                };
            } catch (err) {
                console.error("Lỗi khi truy cập camera:", err);
                errorDisplay.textContent = 'Không thể truy cập camera. Vui lòng kiểm tra quyền truy cập.';
                capturePhotoButton.disabled = true;
                startCameraButton.disabled = false;
            }
        });

        // --- Hàm Chụp Ảnh & Gửi API ---
        capturePhotoButton.addEventListener('click', () => {
            if (!mediaStream) {
                errorDisplay.textContent = 'Vui lòng bật camera trước.';
                return;
            }

            errorDisplay.textContent = ''; // Xóa thông báo lỗi cũ
            resultData.textContent = 'Đang gửi ảnh và chờ kết quả...'; // Cập nhật trạng thái

            // Đặt kích thước canvas bằng với kích thước video feed
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;

            // Vẽ khung hình hiện tại từ video lên canvas
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            // Chuyển đổi ảnh trên canvas thành định dạng Blob (File)
            // 'image/jpeg' hoặc 'image/png'
            canvas.toBlob(async (blob) => {
                if (!blob) {
                    errorDisplay.textContent = 'Lỗi khi tạo ảnh từ canvas.';
                    resultData.textContent = 'Chưa có dữ liệu nào.';
                    return;
                }

                const formData = new FormData();
                formData.append('image', blob, 'webcam_photo.jpg'); // 'image' phải khớp với tên trường trong Flask API

                try {
                    const response = await fetch(API_URL, {
                        method: 'POST',
                        body: formData,
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                        throw new Error(`Lỗi HTTP: ${response.status} - ${errorText}`);
                    }

                    const data = await response.json();
            
                    console.log('Dữ liệu nhận được từ API:', data);
                    var predictions_img = data.predictions || []; // Giả sử API trả về một mảng dự đoán
                    predictions_img.sort((a, b) => b.confidence - a.confidence); // Sắp xếp theo class_id
                    
                    const formatResult = {
                      'Name' : predictions_img[0].class_name,
                      'CheckinTime' : new Date().toISOString(),
                    }
                    resultData.textContent = JSON.stringify(formatResult, null, 2); // Hiển thị JSON đẹp mắt
                    console.log('Dữ liệu đã định dạng để gửi:', formatResult);
                    fetch('http://localhost:5001/api/student/saveresult', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formatResult)
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Lỗi HTTP: ${response.status}`);
                        }
                        console.log('Kết quả đã được gửi thành công.');
                    })
                  
                } catch (error) {
                    console.error('Lỗi khi gửi ảnh lên API:', error);
                    errorDisplay.textContent = `Lỗi khi kết nối API hoặc xử lý phản hồi: ${error.message}. Vui lòng kiểm tra console để biết thêm chi tiết và đảm bảo API của bạn đang chạy.`;
                    resultData.textContent = 'Không thể nhận kết quả.';
                }
            }, 'image/jpeg', 0.9); // Định dạng JPEG với chất lượng 90%
        });

        // Dừng camera khi người dùng rời trang
        window.addEventListener('beforeunload', () => {
            if (mediaStream) {
                mediaStream.getTracks().forEach(track => track.stop());
            }
        });

        // Khôi phục trạng thái nút khi tải lại trang
        document.addEventListener('DOMContentLoaded', () => {
            capturePhotoButton.disabled = true;
            startCameraButton.disabled = false;
        });
    </script>
</body>
</html>